// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  username   String @unique
  password   String
  email      String @unique
  phoneNumber Int @unique @default(0000000000)
}

model NewUsers{
   id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  username   String @unique
  password   String
  email      String @unique
  phoneNumber Int @unique @default(0000000000)
  firstName String
  lastName String
  profilePicture String
  verified Boolean @default(false)
  verificationCode String
  resetPasswordCode String
  resetPasswordCodeExpiry DateTime
  dateOfBirth DateTime
  experience String
  socialMediaLinks String[]
  skills String[]
  bio String
  role String
  location String
  education String
  specialization String
  hourlyRate Int
  availability String
  status String
  projectsCompleted Int
  rating Int
  reviews String[]
  highestBid Int
  lowestBid Int
  totalEarnings Int
  totalProjects Int
  totalClients Int
  totalFreelancers Int
  totalBids Int
  totalActiveProjects Int
  totalCompletedProjects Int
  totalPendingProjects Int
  totalCancelledProjects Int
  portfolio String[]
  
}

model Project {
  project_id      Int      @id @default(autoincrement())
  title           String
  description     String
  client_id       Int
  category        String[] @default([])
  skills_required String[] @default([])
  max_budget      Int
  status          String @default("pending")
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  assigned_to     Int?
  closing_price   Int?
  proposal_count  Int      @default(0)
  completed_at    DateTime?
  payment_status  Boolean @default(false)
  bids            Bid[]

  @@index([client_id])
}

model Bid {
  bid_id          Int      @id @default(autoincrement())  
  freelancer_id   Int                                     
  project_id      Int                                     
  bidding_price   Int                                    
  freelancer_name String                              
  proposal        String                        
  completion_time DateTime?                            
  status          String   @default("pending")           
  submitted_at    DateTime @default(now())                
  client_rating   Int?                                   
  is_active       Boolean @default(true)                       

  project         Project  @relation(fields: [project_id], references: [project_id]) 
  @@index([project_id])                                   
}
